{"id":"node_modules/mqttr/lib/router.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\mqttr\\lib\\router.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\mqttr\\package.json","includedInParent":true,"mtime":1558854523671}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Route {\n    constructor(path) {\n        this.path = path;\n        this.keys = [];\n        path = path.replace(/\\$/, '\\\\$');\n        this.re = pathToRegExp(path, this.keys);\n        this.src = path;\n    }\n}\nexports.Route = Route;\nclass Router {\n    constructor() {\n        this.routes = [];\n    }\n    add(path, data) {\n        if (!path)\n            throw new Error(' route requires a path');\n        const route = new Route(path);\n        route.data = data;\n        this.routes.push(route);\n    }\n    remove(path, data) {\n        if (!path)\n            throw new Error('path must not be null');\n        if (path instanceof RegExp) {\n            path = path.toString();\n        }\n        path = path.replace(/\\$/, '\\\\$');\n        let i;\n        const len = this.routes.length;\n        for (i = 0; i < len; i++) {\n            if (this.routes[i].src === path && (!data || this.routes[i].data === data))\n                break;\n        }\n        if (i < len)\n            this.routes.splice(i, 1);\n    }\n    match(path, startAt) {\n        const matched = match(this.routes, path, startAt);\n        if (matched) {\n            const route = this.routes[matched.current];\n            matched.data = route.data;\n            matched.next = this.match.bind(this, path, matched.current + 1);\n        }\n        return matched;\n    }\n}\nexports.Router = Router;\nfunction pathToRegExp(path, keys) {\n    path = path\n        .concat('/?')\n        .replace(/\\/\\(/g, '(?:/')\n        .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?|\\*/g, (_, slash, format, key, capture, optional) => {\n        if (_ === '*') {\n            keys.push(undefined);\n            return _;\n        }\n        keys.push(key);\n        slash = slash || '';\n        return String(optional ? '' : slash) +\n            '(?:' +\n            (optional ? slash : '') +\n            (format || '') + (capture || '([^/]+?)') + ')' +\n            (optional || '');\n    })\n        .replace(/([/.])/g, '\\\\$1')\n        .replace(/\\*/g, '(.*)');\n    return new RegExp('^' + path + '$', 'i');\n}\nexports.pathToRegExp = pathToRegExp;\nfunction match(routes, uri, startAt) {\n    startAt = startAt || 0;\n    let captures;\n    let len;\n    let i;\n    let j;\n    for (len = routes.length, i = startAt; i < len; ++i) {\n        const route = routes[i];\n        const re = route.re;\n        const keys = route.keys;\n        const splats = [];\n        const params = {};\n        captures = uri.match(re);\n        if (captures) {\n            for (j = 1, len = captures.length; j < len; ++j) {\n                const key = keys[j - 1];\n                const val = typeof captures[j] === 'string' ? decodeURI(captures[j]) : captures[j];\n                if (key) {\n                    params[key] = val;\n                }\n                else {\n                    splats.push(val);\n                }\n            }\n            return {\n                params,\n                splats,\n                route: route.src,\n                current: i\n            };\n        }\n    }\n}\nexports.match = match;\n"},"sourceMaps":{"js":{"version":3,"file":"router.js","sourceRoot":"","sources":["../src/router.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"311a49335691380e49326e0eb5bfc967","cacheData":{"env":{}}}