{"id":"node_modules/jayson/lib/server/index.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\package.json","includedInParent":true,"mtime":1558854523711},{"name":"../","loc":{"line":1,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\index.js"},{"name":"events","loc":{"line":2,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\events\\events.js"},{"name":"lodash","loc":{"line":3,"column":16},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\lodash.js"},{"name":"../utils","loc":{"line":4,"column":20},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\utils.js"},{"name":"util","loc":{"line":70,"column":8},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\util\\util.js"},{"name":"./http","loc":{"line":80,"column":16},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\http.js"},{"name":"./https","loc":{"line":81,"column":17},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\https.js"},{"name":"./tcp","loc":{"line":82,"column":15},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\tcp.js"},{"name":"./tls","loc":{"line":83,"column":15},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\tls.js"},{"name":"./middleware","loc":{"line":84,"column":22},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\middleware.js"}],"generated":{"js":"var jayson = require('../');\nvar events = require('events');\nvar _ = require('lodash');\nvar utils = require('../utils');\n\n/**\n *  Constructor for a Jayson Server\n *  @class Server\n *  @extends require('events').EventEmitter\n *  @param {Object<String,Function>} [methods] Methods to add\n *  @param {Object} [options]\n *  @param {Boolean} [options.collect=true] Passed to Jayson.Method as an option when created\n *  @param {Array|Object} [options.params] Passed to Jayson.Method as an option when created\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Function} [options.methodConstructor] Methods will be made instances of this class\n *  @param {String} [options.encoding=\"utf8\"] Encoding to use\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.router] Function to use for routing methods\n *  @property {Object} options A reference to the internal options object that can be modified directly\n *  @property {Object} errorMessages Map of error code to error message pairs that will be used in server responses\n *  @property {ServerHttp} http HTTP interface constructor\n *  @property {ServerHttps} https HTTPS interface constructor\n *  @property {ServerTcp} tcp TCP interface constructor\n *  @property {ServerTls} tls TLS interface constructor\n *  @property {Middleware} middleware Middleware generator function\n *  @return {Server}\n */\nvar Server = function(methods, options) {\n  if(!(this instanceof Server)) {\n    return new Server(methods, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    encoding: 'utf8',\n    version: 2,\n    collect: true,\n    methodConstructor: jayson.Method,\n    router: function(method) {\n      return this.getMethod(method);\n    }\n  };\n\n  this.options = utils.merge(defaults, options || {});\n\n  // bind router to the server\n  this.options.router = this.options.router.bind(this);\n  \n  this._methods = {};\n\n  // adds methods passed to constructor\n  this.methods(methods || {});\n\n  // assigns interfaces to this instance\n  var interfaces = Server.interfaces;\n  for(var name in interfaces) {\n    this[name] = interfaces[name].bind(interfaces[name], this);\n  }\n\n  // copies error messages for defined codes into this instance\n  this.errorMessages = {};\n  for(var handle in Server.errors) {\n    var code = Server.errors[handle];\n    this.errorMessages[code] = Server.errorMessages[code];\n  }\n\n};\nrequire('util').inherits(Server, events.EventEmitter);\n\nmodule.exports = Server;\n\n/**\n * Interfaces that will be automatically bound as properties of a Server instance\n * @enum {Function}\n * @static\n */\nServer.interfaces = {\n  http: require('./http'),\n  https: require('./https'),\n  tcp: require('./tcp'),\n  tls: require('./tls'),\n  middleware: require('./middleware')\n};\n\n/**\n * JSON-RPC specification errors that map to an integer code\n * @enum {Number}\n * @static\n */\nServer.errors = {\n  PARSE_ERROR: -32700,\n  INVALID_REQUEST: -32600,\n  METHOD_NOT_FOUND: -32601,\n  INVALID_PARAMS: -32602,\n  INTERNAL_ERROR: -32603\n};\n\n/*\n * Error codes that map to an error message\n * @enum {String}\n * @static\n */\nServer.errorMessages = {};\nServer.errorMessages[Server.errors.PARSE_ERROR] = 'Parse Error';\nServer.errorMessages[Server.errors.INVALID_REQUEST] = 'Invalid request';\nServer.errorMessages[Server.errors.METHOD_NOT_FOUND] = 'Method not found';\nServer.errorMessages[Server.errors.INVALID_PARAMS] = 'Invalid method parameter(s)';\nServer.errorMessages[Server.errors.INTERNAL_ERROR] = 'Internal error';\n\n/**\n *  Adds a single method to the server\n *  @param {String} name Name of method to add\n *  @param {Function|Client} definition Function or Client for a relayed method\n *  @throws {TypeError} Invalid parameters\n */\nServer.prototype.method = function(name, definition) {\n  var Method = this.options.methodConstructor;\n\n  var isRelay = definition instanceof jayson.Client;\n  var isMethod = definition instanceof Method;\n  var isFunction = _.isFunction(definition);\n\n  // a valid method is either a function or a client (relayed method)\n  if(!isRelay && !isMethod && !isFunction) {\n    throw new TypeError('method definition must be either a function, an instance of jayson.Client or an instance of jayson.Method');\n  }\n\n  if(!name || typeof(name) !== 'string') {\n    throw new TypeError('\"' + name + '\" must be a non-zero length string');\n  }\n\n  if(/^rpc\\./.test(name)) {\n    throw new TypeError('\"' + name + '\" is a reserved method name');\n  }\n\n  // make instance of jayson.Method\n  if(!isRelay && !isMethod) {\n    definition = new Method(definition, {\n      collect: this.options.collect,\n      params: this.options.params\n    });\n  }\n\n  this._methods[name] = definition;\n};\n\n/**\n *  Adds a batch of methods to the server\n *  @param {Object} methods Methods to add\n */\nServer.prototype.methods = function(methods) {\n  methods = methods || {};\n\n  for(var name in methods) {\n    this.method(name, methods[name]);\n  }\n\n};\n\n/**\n *  Checks if a method is registered with the server\n *  @param {String} name Name of method\n *  @return {Boolean}\n */\nServer.prototype.hasMethod = function(name) {\n  return name in this._methods;\n};\n\n/**\n *  Removes a method from the server\n *  @param {String} name\n */\nServer.prototype.removeMethod = function(name) {\n  if(this.hasMethod(name)) {\n    delete this._methods[name];\n  }\n};\n\n/**\n * Gets a method from the server\n * @param {String} name\n * @return {Method}\n */\nServer.prototype.getMethod = function(name) {\n  return this._methods[name];\n};\n\n/**\n *  Returns a JSON-RPC compatible error property\n *  @param {Number} [code=-32603] Error code\n *  @param {String} [message=\"Internal error\"] Error message\n *  @param {Object} [data] Additional data that should be provided\n *  @return {Object}\n */\nServer.prototype.error = function(code, message, data) {\n  if(typeof(code) !== 'number') {\n    code = Server.errors.INTERNAL_ERROR;\n  }\n\n  if(typeof(message) !== 'string') {\n    message = this.errorMessages[code] || '';\n  }\n\n  var error = { code: code, message: message };\n  if(typeof(data) !== 'undefined') {\n    error.data = data;\n  }\n  return error;\n};\n\n/**\n *  Calls a method on the server\n *  @param {Object|Array|String} request A JSON-RPC request object. Object for single request, Array for batches and String for automatic parsing (using the reviver option)\n *  @param {Function} [callback] Callback that receives one of two arguments: first is an error and the second a response \n */\nServer.prototype.call = function(request, originalCallback) {\n  var self = this;\n\n  if(typeof(originalCallback) !== 'function') {\n    originalCallback = function() {};\n  }\n\n  // compose the callback so that we may emit an event on every response\n  var callback = function(error, response) {\n    self.emit('response', request, response || error);\n    originalCallback.apply(null, arguments);\n  };\n\n  maybeParse(request, this.options, function(err, request) {\n    var error = null; // JSON-RPC error\n\n    if(err) {\n      error = self.error(Server.errors.PARSE_ERROR, null, err);\n      callback(utils.response(error, undefined, undefined, self.options.version));\n      return;\n    }\n\n    // is this a batch request?\n    if(utils.Request.isBatch(request)) {\n\n      // batch requests not allowed for version 1\n      if(self.options.version === 1) {\n        error = self.error(Server.errors.INVALID_REQUEST);\n        callback(utils.response(error, undefined, undefined, self.options.version));\n        return;\n      }\n\n      // special case if empty batch request\n      if(!request.length) {\n        error = self.error(Server.errors.INVALID_REQUEST);\n        callback(utils.response(error, undefined, undefined, self.options.version));\n        return;\n      }\n      self._batch(request, callback);\n      return;\n    }\n\n    self.emit('request', request);\n\n    // is the request valid?\n    if(!utils.Request.isValidRequest(request, self.options.version)) {\n      error = self.error(Server.errors.INVALID_REQUEST);\n      callback(utils.response(error, undefined, undefined, self.options.version));\n      return;\n    }\n\n    // from now on we are \"notification-aware\" and can deliberately ignore errors for such requests\n    var respond = function(error, result) {\n      if(utils.Request.isNotification(request)) {\n        callback();\n        return;\n      }\n      var response = utils.response(error, result, request.id, self.options.version);\n      if(response.error) {\n        callback(response);\n      } else {\n        callback(null, response);\n      }\n    };\n\n    var method = self._resolveRouter(request.method, request.params);\n\n    // are we attempting to invoke a relayed method?\n    if(method instanceof jayson.Client) {\n      return method.request(request.method, request.params, request.id, function(error, response) {\n        if(utils.Request.isNotification(request)) {\n          callback();\n          return;\n        }\n        callback(error, response);\n      });\n    }\n    \n    // does the method exist?\n    if(!(method instanceof jayson.Method)) {\n      respond(self.error(Server.errors.METHOD_NOT_FOUND));\n      return;\n    }\n\n    // execute jayson.Method instance\n    method.execute(self, request.params, function(error, result) {\n    \n      if(utils.Response.isValidError(error, self.options.version)) {\n        respond(error);\n        return;\n      }\n\n      // got an invalid error\n      if(error) {\n        respond(self.error(Server.errors.INTERNAL_ERROR));\n        return;\n      }\n\n      respond(null, result);\n    \n    });\n\n  });\n};\n\n/**\n * Invoke the router\n * @param {String} method Method to resolve\n * @param {Array|Object} params Request params\n * @return {Method}\n */\nServer.prototype._resolveRouter = function(method, params) {\n\n  var router = this.options.router;\n\n  if(!_.isFunction(router)) {\n    router = function(method) {\n      return this.getMethod(method);\n    };\n  }\n\n  var resolved = router.call(this, method, params);\n\n  // got a jayson.Method or a jayson.Client, return it\n  if((resolved instanceof jayson.Method) || (resolved instanceof jayson.Client)) {\n    return resolved;\n  }\n\n  // got a regular function, make it an instance of jayson.Method\n  if(_.isFunction(resolved)) {\n    return new jayson.Method(resolved);\n  }\n\n};\n\n/**\n *  Evaluates a batch request\n *  @private\n */\nServer.prototype._batch = function(requests, callback) {\n  var self = this;\n  \n  var responses = [];\n\n  this.emit('batch', requests);\n\n  /**\n   * @ignore\n   */\n  var maybeRespond = function() {\n\n    // done when we have filled up all the responses with a truthy value\n    var isDone = responses.every(function(response) { return response !== null; });\n    if(isDone) {\n\n      // filters away notifications\n      var filtered = responses.filter(function(res) {\n        return res !== true;\n      });\n\n      // only notifications in request means empty response\n      if(!filtered.length) {\n        return callback();\n      }\n      callback(null, filtered);\n    }\n  };\n\n  /**\n   * @ignore\n   */\n  var wrapper = function(request, index) {\n    responses[index] = null;\n    return function() {\n      if(utils.Request.isValidRequest(request, self.options.version)) {\n        self.call(request, function(error, response) {\n          responses[index] = error || response || true;\n          maybeRespond();\n        });\n      } else {\n        var error = self.error(Server.errors.INVALID_REQUEST);\n        responses[index] = utils.response(error, undefined, undefined, self.options.version);\n        maybeRespond();\n      }\n    };\n  };\n\n  var stack = requests.map(function(request, index) {\n    // ignore possibly nested requests\n    if(utils.Request.isBatch(request)) {\n      return null;\n    }\n    return wrapper(request, index);\n  });\n\n  stack.forEach(function(method) {\n    if(typeof(method) === 'function') {\n      method();\n    }\n  });\n};\n\n/**\n * Parse \"request\" if it is a string, else just invoke callback\n * @ignore\n */\nfunction maybeParse(request, options, callback) {\n  if(typeof(request) === 'string') {\n    utils.JSON.parse(request, options, callback);\n  } else {\n    callback(null, request);\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jayson/lib/server/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/jayson/lib/server/index.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}}],"sources":{"node_modules/jayson/lib/server/index.js":"var jayson = require('../');\nvar events = require('events');\nvar _ = require('lodash');\nvar utils = require('../utils');\n\n/**\n *  Constructor for a Jayson Server\n *  @class Server\n *  @extends require('events').EventEmitter\n *  @param {Object<String,Function>} [methods] Methods to add\n *  @param {Object} [options]\n *  @param {Boolean} [options.collect=true] Passed to Jayson.Method as an option when created\n *  @param {Array|Object} [options.params] Passed to Jayson.Method as an option when created\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Function} [options.methodConstructor] Methods will be made instances of this class\n *  @param {String} [options.encoding=\"utf8\"] Encoding to use\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.router] Function to use for routing methods\n *  @property {Object} options A reference to the internal options object that can be modified directly\n *  @property {Object} errorMessages Map of error code to error message pairs that will be used in server responses\n *  @property {ServerHttp} http HTTP interface constructor\n *  @property {ServerHttps} https HTTPS interface constructor\n *  @property {ServerTcp} tcp TCP interface constructor\n *  @property {ServerTls} tls TLS interface constructor\n *  @property {Middleware} middleware Middleware generator function\n *  @return {Server}\n */\nvar Server = function(methods, options) {\n  if(!(this instanceof Server)) {\n    return new Server(methods, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    encoding: 'utf8',\n    version: 2,\n    collect: true,\n    methodConstructor: jayson.Method,\n    router: function(method) {\n      return this.getMethod(method);\n    }\n  };\n\n  this.options = utils.merge(defaults, options || {});\n\n  // bind router to the server\n  this.options.router = this.options.router.bind(this);\n  \n  this._methods = {};\n\n  // adds methods passed to constructor\n  this.methods(methods || {});\n\n  // assigns interfaces to this instance\n  var interfaces = Server.interfaces;\n  for(var name in interfaces) {\n    this[name] = interfaces[name].bind(interfaces[name], this);\n  }\n\n  // copies error messages for defined codes into this instance\n  this.errorMessages = {};\n  for(var handle in Server.errors) {\n    var code = Server.errors[handle];\n    this.errorMessages[code] = Server.errorMessages[code];\n  }\n\n};\nrequire('util').inherits(Server, events.EventEmitter);\n\nmodule.exports = Server;\n\n/**\n * Interfaces that will be automatically bound as properties of a Server instance\n * @enum {Function}\n * @static\n */\nServer.interfaces = {\n  http: require('./http'),\n  https: require('./https'),\n  tcp: require('./tcp'),\n  tls: require('./tls'),\n  middleware: require('./middleware')\n};\n\n/**\n * JSON-RPC specification errors that map to an integer code\n * @enum {Number}\n * @static\n */\nServer.errors = {\n  PARSE_ERROR: -32700,\n  INVALID_REQUEST: -32600,\n  METHOD_NOT_FOUND: -32601,\n  INVALID_PARAMS: -32602,\n  INTERNAL_ERROR: -32603\n};\n\n/*\n * Error codes that map to an error message\n * @enum {String}\n * @static\n */\nServer.errorMessages = {};\nServer.errorMessages[Server.errors.PARSE_ERROR] = 'Parse Error';\nServer.errorMessages[Server.errors.INVALID_REQUEST] = 'Invalid request';\nServer.errorMessages[Server.errors.METHOD_NOT_FOUND] = 'Method not found';\nServer.errorMessages[Server.errors.INVALID_PARAMS] = 'Invalid method parameter(s)';\nServer.errorMessages[Server.errors.INTERNAL_ERROR] = 'Internal error';\n\n/**\n *  Adds a single method to the server\n *  @param {String} name Name of method to add\n *  @param {Function|Client} definition Function or Client for a relayed method\n *  @throws {TypeError} Invalid parameters\n */\nServer.prototype.method = function(name, definition) {\n  var Method = this.options.methodConstructor;\n\n  var isRelay = definition instanceof jayson.Client;\n  var isMethod = definition instanceof Method;\n  var isFunction = _.isFunction(definition);\n\n  // a valid method is either a function or a client (relayed method)\n  if(!isRelay && !isMethod && !isFunction) {\n    throw new TypeError('method definition must be either a function, an instance of jayson.Client or an instance of jayson.Method');\n  }\n\n  if(!name || typeof(name) !== 'string') {\n    throw new TypeError('\"' + name + '\" must be a non-zero length string');\n  }\n\n  if(/^rpc\\./.test(name)) {\n    throw new TypeError('\"' + name + '\" is a reserved method name');\n  }\n\n  // make instance of jayson.Method\n  if(!isRelay && !isMethod) {\n    definition = new Method(definition, {\n      collect: this.options.collect,\n      params: this.options.params\n    });\n  }\n\n  this._methods[name] = definition;\n};\n\n/**\n *  Adds a batch of methods to the server\n *  @param {Object} methods Methods to add\n */\nServer.prototype.methods = function(methods) {\n  methods = methods || {};\n\n  for(var name in methods) {\n    this.method(name, methods[name]);\n  }\n\n};\n\n/**\n *  Checks if a method is registered with the server\n *  @param {String} name Name of method\n *  @return {Boolean}\n */\nServer.prototype.hasMethod = function(name) {\n  return name in this._methods;\n};\n\n/**\n *  Removes a method from the server\n *  @param {String} name\n */\nServer.prototype.removeMethod = function(name) {\n  if(this.hasMethod(name)) {\n    delete this._methods[name];\n  }\n};\n\n/**\n * Gets a method from the server\n * @param {String} name\n * @return {Method}\n */\nServer.prototype.getMethod = function(name) {\n  return this._methods[name];\n};\n\n/**\n *  Returns a JSON-RPC compatible error property\n *  @param {Number} [code=-32603] Error code\n *  @param {String} [message=\"Internal error\"] Error message\n *  @param {Object} [data] Additional data that should be provided\n *  @return {Object}\n */\nServer.prototype.error = function(code, message, data) {\n  if(typeof(code) !== 'number') {\n    code = Server.errors.INTERNAL_ERROR;\n  }\n\n  if(typeof(message) !== 'string') {\n    message = this.errorMessages[code] || '';\n  }\n\n  var error = { code: code, message: message };\n  if(typeof(data) !== 'undefined') {\n    error.data = data;\n  }\n  return error;\n};\n\n/**\n *  Calls a method on the server\n *  @param {Object|Array|String} request A JSON-RPC request object. Object for single request, Array for batches and String for automatic parsing (using the reviver option)\n *  @param {Function} [callback] Callback that receives one of two arguments: first is an error and the second a response \n */\nServer.prototype.call = function(request, originalCallback) {\n  var self = this;\n\n  if(typeof(originalCallback) !== 'function') {\n    originalCallback = function() {};\n  }\n\n  // compose the callback so that we may emit an event on every response\n  var callback = function(error, response) {\n    self.emit('response', request, response || error);\n    originalCallback.apply(null, arguments);\n  };\n\n  maybeParse(request, this.options, function(err, request) {\n    var error = null; // JSON-RPC error\n\n    if(err) {\n      error = self.error(Server.errors.PARSE_ERROR, null, err);\n      callback(utils.response(error, undefined, undefined, self.options.version));\n      return;\n    }\n\n    // is this a batch request?\n    if(utils.Request.isBatch(request)) {\n\n      // batch requests not allowed for version 1\n      if(self.options.version === 1) {\n        error = self.error(Server.errors.INVALID_REQUEST);\n        callback(utils.response(error, undefined, undefined, self.options.version));\n        return;\n      }\n\n      // special case if empty batch request\n      if(!request.length) {\n        error = self.error(Server.errors.INVALID_REQUEST);\n        callback(utils.response(error, undefined, undefined, self.options.version));\n        return;\n      }\n      self._batch(request, callback);\n      return;\n    }\n\n    self.emit('request', request);\n\n    // is the request valid?\n    if(!utils.Request.isValidRequest(request, self.options.version)) {\n      error = self.error(Server.errors.INVALID_REQUEST);\n      callback(utils.response(error, undefined, undefined, self.options.version));\n      return;\n    }\n\n    // from now on we are \"notification-aware\" and can deliberately ignore errors for such requests\n    var respond = function(error, result) {\n      if(utils.Request.isNotification(request)) {\n        callback();\n        return;\n      }\n      var response = utils.response(error, result, request.id, self.options.version);\n      if(response.error) {\n        callback(response);\n      } else {\n        callback(null, response);\n      }\n    };\n\n    var method = self._resolveRouter(request.method, request.params);\n\n    // are we attempting to invoke a relayed method?\n    if(method instanceof jayson.Client) {\n      return method.request(request.method, request.params, request.id, function(error, response) {\n        if(utils.Request.isNotification(request)) {\n          callback();\n          return;\n        }\n        callback(error, response);\n      });\n    }\n    \n    // does the method exist?\n    if(!(method instanceof jayson.Method)) {\n      respond(self.error(Server.errors.METHOD_NOT_FOUND));\n      return;\n    }\n\n    // execute jayson.Method instance\n    method.execute(self, request.params, function(error, result) {\n    \n      if(utils.Response.isValidError(error, self.options.version)) {\n        respond(error);\n        return;\n      }\n\n      // got an invalid error\n      if(error) {\n        respond(self.error(Server.errors.INTERNAL_ERROR));\n        return;\n      }\n\n      respond(null, result);\n    \n    });\n\n  });\n};\n\n/**\n * Invoke the router\n * @param {String} method Method to resolve\n * @param {Array|Object} params Request params\n * @return {Method}\n */\nServer.prototype._resolveRouter = function(method, params) {\n\n  var router = this.options.router;\n\n  if(!_.isFunction(router)) {\n    router = function(method) {\n      return this.getMethod(method);\n    };\n  }\n\n  var resolved = router.call(this, method, params);\n\n  // got a jayson.Method or a jayson.Client, return it\n  if((resolved instanceof jayson.Method) || (resolved instanceof jayson.Client)) {\n    return resolved;\n  }\n\n  // got a regular function, make it an instance of jayson.Method\n  if(_.isFunction(resolved)) {\n    return new jayson.Method(resolved);\n  }\n\n};\n\n/**\n *  Evaluates a batch request\n *  @private\n */\nServer.prototype._batch = function(requests, callback) {\n  var self = this;\n  \n  var responses = [];\n\n  this.emit('batch', requests);\n\n  /**\n   * @ignore\n   */\n  var maybeRespond = function() {\n\n    // done when we have filled up all the responses with a truthy value\n    var isDone = responses.every(function(response) { return response !== null; });\n    if(isDone) {\n\n      // filters away notifications\n      var filtered = responses.filter(function(res) {\n        return res !== true;\n      });\n\n      // only notifications in request means empty response\n      if(!filtered.length) {\n        return callback();\n      }\n      callback(null, filtered);\n    }\n  };\n\n  /**\n   * @ignore\n   */\n  var wrapper = function(request, index) {\n    responses[index] = null;\n    return function() {\n      if(utils.Request.isValidRequest(request, self.options.version)) {\n        self.call(request, function(error, response) {\n          responses[index] = error || response || true;\n          maybeRespond();\n        });\n      } else {\n        var error = self.error(Server.errors.INVALID_REQUEST);\n        responses[index] = utils.response(error, undefined, undefined, self.options.version);\n        maybeRespond();\n      }\n    };\n  };\n\n  var stack = requests.map(function(request, index) {\n    // ignore possibly nested requests\n    if(utils.Request.isBatch(request)) {\n      return null;\n    }\n    return wrapper(request, index);\n  });\n\n  stack.forEach(function(method) {\n    if(typeof(method) === 'function') {\n      method();\n    }\n  });\n};\n\n/**\n * Parse \"request\" if it is a string, else just invoke callback\n * @ignore\n */\nfunction maybeParse(request, options, callback) {\n  if(typeof(request) === 'string') {\n    utils.JSON.parse(request, options, callback);\n  } else {\n    callback(null, request);\n  }\n}\n"},"lineCount":431}},"error":null,"hash":"f730938922cc1bac029dde5c900879e3","cacheData":{"env":{}}}