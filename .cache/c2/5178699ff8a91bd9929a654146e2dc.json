{"id":"node_modules/jayson/lib/server/middleware.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\package.json","includedInParent":true,"mtime":1558854523711},{"name":"../utils","loc":{"line":1,"column":20},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\middleware.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\utils.js"},{"name":"buffer","parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\middleware.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar utils = require('../utils');\n\n/**\n * Creates a Connect/Express compatible middleware bound to a Server\n * @class ServerMiddleware\n * @param {Server} server Server instance\n * @param {Object} [outerOptions] Specific options for the middleware\n * @return {Function}\n */\nvar Middleware = function(server, outerOptions) {\n  return function(req, res, next) {\n    var options = utils.merge(server.options, outerOptions || {});\n\n    // default options.end to true\n    if(typeof(options.end) !== 'boolean') {\n      options.end = true;\n    }\n\n    //  405 method not allowed if not POST\n    if(!utils.isMethod(req, 'POST')) {\n      return error(405, { 'Allow': 'POST' });\n    }\n\n    // 415 unsupported media type if Content-Type is not correct\n    if(!utils.isContentType(req, 'application/json')) {\n      return error(415);\n    }\n\n    // body does not appear to be parsed, 500 server error\n    if(!req.body || typeof(req.body) !== 'object') {\n      return next(new Error('Request body must be parsed'));\n    }\n\n    server.call(req.body, function(error, success) {\n      var response = error || success;\n\n      utils.JSON.stringify(response, options, function(err, body) {\n        if(err) {\n          return next(err);\n        }\n\n        // empty response?\n        if(body) {\n          var headers = {\n            'content-length': Buffer.byteLength(body, options.encoding),\n            'content-type': 'application/json; charset=utf-8'\n          };\n\n          res.writeHead(200, headers);\n          res.write(body);\n        } else {\n          res.writeHead(204);\n        }\n\n        // if end is false, next request instead of ending it\n        if(options.end) {\n          res.end();\n        } else {\n          next();\n        }\n\n      });\n    });\n\n    // ends the request with an error code\n    function error(code, headers) {\n      res.writeHead(code, headers || {});\n      res.end();\n    }\n  };\n};\n\nmodule.exports = Middleware;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jayson/lib/server/middleware.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/jayson/lib/server/middleware.js":"var utils = require('../utils');\n\n/**\n * Creates a Connect/Express compatible middleware bound to a Server\n * @class ServerMiddleware\n * @param {Server} server Server instance\n * @param {Object} [outerOptions] Specific options for the middleware\n * @return {Function}\n */\nvar Middleware = function(server, outerOptions) {\n  return function(req, res, next) {\n    var options = utils.merge(server.options, outerOptions || {});\n\n    // default options.end to true\n    if(typeof(options.end) !== 'boolean') {\n      options.end = true;\n    }\n\n    //  405 method not allowed if not POST\n    if(!utils.isMethod(req, 'POST')) {\n      return error(405, { 'Allow': 'POST' });\n    }\n\n    // 415 unsupported media type if Content-Type is not correct\n    if(!utils.isContentType(req, 'application/json')) {\n      return error(415);\n    }\n\n    // body does not appear to be parsed, 500 server error\n    if(!req.body || typeof(req.body) !== 'object') {\n      return next(new Error('Request body must be parsed'));\n    }\n\n    server.call(req.body, function(error, success) {\n      var response = error || success;\n\n      utils.JSON.stringify(response, options, function(err, body) {\n        if(err) {\n          return next(err);\n        }\n\n        // empty response?\n        if(body) {\n          var headers = {\n            'content-length': Buffer.byteLength(body, options.encoding),\n            'content-type': 'application/json; charset=utf-8'\n          };\n\n          res.writeHead(200, headers);\n          res.write(body);\n        } else {\n          res.writeHead(204);\n        }\n\n        // if end is false, next request instead of ending it\n        if(options.end) {\n          res.end();\n        } else {\n          next();\n        }\n\n      });\n    });\n\n    // ends the request with an error code\n    function error(code, headers) {\n      res.writeHead(code, headers || {});\n      res.end();\n    }\n  };\n};\n\nmodule.exports = Middleware;\n"},"lineCount":75}},"error":null,"hash":"4c14a3f4755831548f9badecacb30486","cacheData":{"env":{}}}