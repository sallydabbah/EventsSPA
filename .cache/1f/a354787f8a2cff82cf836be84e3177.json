{"id":"node_modules/es6-symbol/polyfill.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es6-symbol\\package.json","includedInParent":true,"mtime":1558854523702},{"name":"d","loc":{"line":5,"column":29},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es6-symbol\\polyfill.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\d\\index.js"},{"name":"./validate-symbol","loc":{"line":6,"column":29},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es6-symbol\\polyfill.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es6-symbol\\validate-symbol.js"}],"generated":{"js":"// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/es6-symbol/polyfill.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}}],"sources":{"node_modules/es6-symbol/polyfill.js":"// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n"},"lineCount":119}},"error":null,"hash":"95f03c7cf4fd17d4d0f53b331e588bd9","cacheData":{"env":{}}}