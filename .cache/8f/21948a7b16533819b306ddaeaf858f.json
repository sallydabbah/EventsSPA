{"id":"node_modules/jayson/lib/client/index.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\package.json","includedInParent":true,"mtime":1558854523711},{"name":"lodash","loc":{"line":1,"column":16},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\lodash.js"},{"name":"../utils","loc":{"line":2,"column":20},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\utils.js"},{"name":"events","loc":{"line":3,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\events\\events.js"},{"name":"util","loc":{"line":40,"column":8},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\util\\util.js"},{"name":"./http","loc":{"line":49,"column":22},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\http.js"},{"name":"./https","loc":{"line":56,"column":23},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\https.js"},{"name":"./tcp","loc":{"line":63,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\tcp.js"},{"name":"./tls","loc":{"line":70,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\tls.js"},{"name":"./browser","loc":{"line":77,"column":25},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\index.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js"}],"generated":{"js":"var _ = require('lodash');\nvar utils = require('../utils');\nvar events = require('events');\n\n/**\n *  Constructor for a Jayson Client\n *  @class Client\n *  @extends require('events').EventEmitter\n *  @param {Server} [server] An instance of Server (a object with a \"call\" method\")\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {Client}\n */\nvar Client = function(server, options) {\n  if(arguments.length === 1 && _.isPlainObject(server)) {\n    options = server;\n    server = null;\n  }\n\n  if(!(this instanceof Client)) {\n    return new Client(server, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: utils.generateId,\n    version: 2\n  };\n\n  this.options = utils.merge(defaults, options || {});\n\n  if(server) {\n    this.server = server;\n  }\n};\nrequire('util').inherits(Client, events.EventEmitter);\n\nmodule.exports = Client;\n\n/**\n * HTTP client constructor\n * @type ClientHttp\n * @static\n */\nClient.http = require('./http');\n\n/**\n * HTTPS client constructor\n * @type ClientHttps\n * @static\n */\nClient.https = require('./https');\n\n/**\n * TCP client constructor\n * @type ClientTcp\n * @static\n */\nClient.tcp = require('./tcp');\n\n/**\n * TLS client constructor\n * @type ClientTls\n * @static\n */\nClient.tls = require('./tls');\n\n/**\n * Browser client constructor\n * @type ClientBrowser\n * @static\n */\nClient.browser = require('./browser');\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} params Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClient.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = Array.isArray(method) && typeof(params) === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && typeof(method) === 'object' && typeof(params) === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof(id) === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = typeof(callback) === 'function';\n\n    try {\n      request = utils.request(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        callback(err);\n        return;\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request before sending\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  this.emit('request', request);\n\n  this._request(request, function(err, response) {\n    self.emit('response', request, response);\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n *  Executes a request on a directly bound server\n *  @param {Object} request A JSON-RPC 1.0 or 2.0 request\n *  @param {Function} callback Request callback that will receive the server response as the second argument\n *  @private\n */\nClient.prototype._request = function(request, callback) {\n  var self = this;\n\n  // serializes the request as a JSON string so that we get a copy and can run the replacer as intended\n  utils.JSON.stringify(request, this.options, function(err, message) {\n    if(err) {\n      callback(err);\n      return;\n    }\n\n    self.server.call(message, function(error, success) {\n      var response = error || success;\n      callback(null, response);\n    });\n\n  });\n\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {Object} response JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClient.prototype._parseResponse = function(err, response, callback) {\n  if(err) {\n    return callback(err);\n  }\n\n  if(!response || typeof(response) !== 'object') {\n    return callback();\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return typeof(res.error) !== 'undefined'; };\n      var isNotError = function(res) { return !isError(res); };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  return callback(null, response);\n\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jayson/lib/client/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jayson/lib/client/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}}],"sources":{"node_modules/jayson/lib/client/index.js":"var _ = require('lodash');\nvar utils = require('../utils');\nvar events = require('events');\n\n/**\n *  Constructor for a Jayson Client\n *  @class Client\n *  @extends require('events').EventEmitter\n *  @param {Server} [server] An instance of Server (a object with a \"call\" method\")\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {Client}\n */\nvar Client = function(server, options) {\n  if(arguments.length === 1 && _.isPlainObject(server)) {\n    options = server;\n    server = null;\n  }\n\n  if(!(this instanceof Client)) {\n    return new Client(server, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: utils.generateId,\n    version: 2\n  };\n\n  this.options = utils.merge(defaults, options || {});\n\n  if(server) {\n    this.server = server;\n  }\n};\nrequire('util').inherits(Client, events.EventEmitter);\n\nmodule.exports = Client;\n\n/**\n * HTTP client constructor\n * @type ClientHttp\n * @static\n */\nClient.http = require('./http');\n\n/**\n * HTTPS client constructor\n * @type ClientHttps\n * @static\n */\nClient.https = require('./https');\n\n/**\n * TCP client constructor\n * @type ClientTcp\n * @static\n */\nClient.tcp = require('./tcp');\n\n/**\n * TLS client constructor\n * @type ClientTls\n * @static\n */\nClient.tls = require('./tls');\n\n/**\n * Browser client constructor\n * @type ClientBrowser\n * @static\n */\nClient.browser = require('./browser');\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} params Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClient.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = Array.isArray(method) && typeof(params) === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && typeof(method) === 'object' && typeof(params) === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof(id) === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = typeof(callback) === 'function';\n\n    try {\n      request = utils.request(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        callback(err);\n        return;\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request before sending\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  this.emit('request', request);\n\n  this._request(request, function(err, response) {\n    self.emit('response', request, response);\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n *  Executes a request on a directly bound server\n *  @param {Object} request A JSON-RPC 1.0 or 2.0 request\n *  @param {Function} callback Request callback that will receive the server response as the second argument\n *  @private\n */\nClient.prototype._request = function(request, callback) {\n  var self = this;\n\n  // serializes the request as a JSON string so that we get a copy and can run the replacer as intended\n  utils.JSON.stringify(request, this.options, function(err, message) {\n    if(err) {\n      callback(err);\n      return;\n    }\n\n    self.server.call(message, function(error, success) {\n      var response = error || success;\n      callback(null, response);\n    });\n\n  });\n\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {Object} response JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClient.prototype._parseResponse = function(err, response, callback) {\n  if(err) {\n    return callback(err);\n  }\n\n  if(!response || typeof(response) !== 'object') {\n    return callback();\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return typeof(res.error) !== 'undefined'; };\n      var isNotError = function(res) { return !isError(res); };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  return callback(null, response);\n\n};\n"},"lineCount":210}},"error":null,"hash":"db8a244d721214f5d20b36633d71be94","cacheData":{"env":{}}}