{"id":"node_modules/jayson/lib/generateRequest.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\package.json","includedInParent":true,"mtime":1558854523711},{"name":"lodash/isString","loc":{"line":3,"column":23},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isString.js"},{"name":"lodash/isUndefined","loc":{"line":4,"column":26},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isUndefined.js"},{"name":"lodash/isObject","loc":{"line":5,"column":23},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isObject.js"},{"name":"lodash/isArray","loc":{"line":6,"column":22},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isArray.js"},{"name":"lodash/isFunction","loc":{"line":7,"column":25},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isFunction.js"},{"name":"uuid/v4","loc":{"line":8,"column":19},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\uuid\\v4.js"}],"generated":{"js":"'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jayson/lib/generateRequest.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"node_modules/jayson/lib/generateRequest.js":"'use strict';\n\nvar isString = require('lodash/isString');\nvar isUndefined = require('lodash/isUndefined');\nvar isObject = require('lodash/isObject');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar uuid = require('uuid/v4');\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n */\nmodule.exports = function(method, params, id, options) {\n  if(!isString(method)) {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  var request = {\n    method: method\n  };\n\n  // assume that we are doing a 2.0 request unless specified differently\n  if(isUndefined(options.version) || options.version !== 1) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n\n    // params given, but invalid?\n    if(!isObject(params) && !isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n\n    request.params = params;\n\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    var generator = isFunction(options.generator) ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n"},"lineCount":58}},"error":null,"hash":"a96fd1b7d62f08cb4b9d1da2a8f418fe","cacheData":{"env":{}}}