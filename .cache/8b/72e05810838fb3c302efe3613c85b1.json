{"id":"node_modules/mqtt-packet/constants.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\mqtt-packet\\package.json","includedInParent":true,"mtime":1558854523712},{"name":"safe-buffer","loc":{"line":3,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\mqtt-packet\\constants.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\safe-buffer\\index.js"}],"generated":{"js":"\n'use strict'\n\nvar Buffer = require('safe-buffer').Buffer\n\n/* Protocol - protocol constants */\nvar protocol = module.exports\n\n/* Command code => mnemonic */\nprotocol.types = {\n  0: 'reserved',\n  1: 'connect',\n  2: 'connack',\n  3: 'publish',\n  4: 'puback',\n  5: 'pubrec',\n  6: 'pubrel',\n  7: 'pubcomp',\n  8: 'subscribe',\n  9: 'suback',\n  10: 'unsubscribe',\n  11: 'unsuback',\n  12: 'pingreq',\n  13: 'pingresp',\n  14: 'disconnect',\n  15: 'reserved'\n}\n\n/* Mnemonic => Command code */\nprotocol.codes = {}\nfor (var k in protocol.types) {\n  var v = protocol.types[k]\n  protocol.codes[v] = k\n}\n\n/* Header */\nprotocol.CMD_SHIFT = 4\nprotocol.CMD_MASK = 0xF0\nprotocol.DUP_MASK = 0x08\nprotocol.QOS_MASK = 0x03\nprotocol.QOS_SHIFT = 1\nprotocol.RETAIN_MASK = 0x01\n\n/* Length */\nprotocol.LENGTH_MASK = 0x7F\nprotocol.LENGTH_FIN_MASK = 0x80\n\n/* Connack */\nprotocol.SESSIONPRESENT_MASK = 0x01\nprotocol.SESSIONPRESENT_HEADER = Buffer.from([protocol.SESSIONPRESENT_MASK])\nprotocol.CONNACK_HEADER = Buffer.from([protocol.codes['connack'] << protocol.CMD_SHIFT])\n\n/* Connect */\nprotocol.USERNAME_MASK = 0x80\nprotocol.PASSWORD_MASK = 0x40\nprotocol.WILL_RETAIN_MASK = 0x20\nprotocol.WILL_QOS_MASK = 0x18\nprotocol.WILL_QOS_SHIFT = 3\nprotocol.WILL_FLAG_MASK = 0x04\nprotocol.CLEAN_SESSION_MASK = 0x02\nprotocol.CONNECT_HEADER = Buffer.from([protocol.codes['connect'] << protocol.CMD_SHIFT])\n\nfunction genHeader (type) {\n  return [0, 1, 2].map(function (qos) {\n    return [0, 1].map(function (dup) {\n      return [0, 1].map(function (retain) {\n        var buf = new Buffer(1)\n        buf.writeUInt8(\n          protocol.codes[type] << protocol.CMD_SHIFT |\n          (dup ? protocol.DUP_MASK : 0) |\n          qos << protocol.QOS_SHIFT | retain, 0, true)\n        return buf\n      })\n    })\n  })\n}\n\n/* Publish */\nprotocol.PUBLISH_HEADER = genHeader('publish')\n\n/* Subscribe */\nprotocol.SUBSCRIBE_HEADER = genHeader('subscribe')\n\n/* Unsubscribe */\nprotocol.UNSUBSCRIBE_HEADER = genHeader('unsubscribe')\n\n/* Confirmations */\nprotocol.ACKS = {\n  unsuback: genHeader('unsuback'),\n  puback: genHeader('puback'),\n  pubcomp: genHeader('pubcomp'),\n  pubrel: genHeader('pubrel'),\n  pubrec: genHeader('pubrec')\n}\n\nprotocol.SUBACK_HEADER = Buffer.from([protocol.codes['suback'] << protocol.CMD_SHIFT])\n\n/* Protocol versions */\nprotocol.VERSION3 = Buffer.from([3])\nprotocol.VERSION4 = Buffer.from([4])\n\n/* QoS */\nprotocol.QOS = [0, 1, 2].map(function (qos) {\n  return Buffer.from([qos])\n})\n\n/* Empty packets */\nprotocol.EMPTY = {\n  pingreq: Buffer.from([protocol.codes['pingreq'] << 4, 0]),\n  pingresp: Buffer.from([protocol.codes['pingresp'] << 4, 0]),\n  disconnect: Buffer.from([protocol.codes['disconnect'] << 4, 0])\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mqtt-packet/constants.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mqtt-packet/constants.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}}],"sources":{"node_modules/mqtt-packet/constants.js":"'use strict'\n\nvar Buffer = require('safe-buffer').Buffer\n\n/* Protocol - protocol constants */\nvar protocol = module.exports\n\n/* Command code => mnemonic */\nprotocol.types = {\n  0: 'reserved',\n  1: 'connect',\n  2: 'connack',\n  3: 'publish',\n  4: 'puback',\n  5: 'pubrec',\n  6: 'pubrel',\n  7: 'pubcomp',\n  8: 'subscribe',\n  9: 'suback',\n  10: 'unsubscribe',\n  11: 'unsuback',\n  12: 'pingreq',\n  13: 'pingresp',\n  14: 'disconnect',\n  15: 'reserved'\n}\n\n/* Mnemonic => Command code */\nprotocol.codes = {}\nfor (var k in protocol.types) {\n  var v = protocol.types[k]\n  protocol.codes[v] = k\n}\n\n/* Header */\nprotocol.CMD_SHIFT = 4\nprotocol.CMD_MASK = 0xF0\nprotocol.DUP_MASK = 0x08\nprotocol.QOS_MASK = 0x03\nprotocol.QOS_SHIFT = 1\nprotocol.RETAIN_MASK = 0x01\n\n/* Length */\nprotocol.LENGTH_MASK = 0x7F\nprotocol.LENGTH_FIN_MASK = 0x80\n\n/* Connack */\nprotocol.SESSIONPRESENT_MASK = 0x01\nprotocol.SESSIONPRESENT_HEADER = Buffer.from([protocol.SESSIONPRESENT_MASK])\nprotocol.CONNACK_HEADER = Buffer.from([protocol.codes['connack'] << protocol.CMD_SHIFT])\n\n/* Connect */\nprotocol.USERNAME_MASK = 0x80\nprotocol.PASSWORD_MASK = 0x40\nprotocol.WILL_RETAIN_MASK = 0x20\nprotocol.WILL_QOS_MASK = 0x18\nprotocol.WILL_QOS_SHIFT = 3\nprotocol.WILL_FLAG_MASK = 0x04\nprotocol.CLEAN_SESSION_MASK = 0x02\nprotocol.CONNECT_HEADER = Buffer.from([protocol.codes['connect'] << protocol.CMD_SHIFT])\n\nfunction genHeader (type) {\n  return [0, 1, 2].map(function (qos) {\n    return [0, 1].map(function (dup) {\n      return [0, 1].map(function (retain) {\n        var buf = new Buffer(1)\n        buf.writeUInt8(\n          protocol.codes[type] << protocol.CMD_SHIFT |\n          (dup ? protocol.DUP_MASK : 0) |\n          qos << protocol.QOS_SHIFT | retain, 0, true)\n        return buf\n      })\n    })\n  })\n}\n\n/* Publish */\nprotocol.PUBLISH_HEADER = genHeader('publish')\n\n/* Subscribe */\nprotocol.SUBSCRIBE_HEADER = genHeader('subscribe')\n\n/* Unsubscribe */\nprotocol.UNSUBSCRIBE_HEADER = genHeader('unsubscribe')\n\n/* Confirmations */\nprotocol.ACKS = {\n  unsuback: genHeader('unsuback'),\n  puback: genHeader('puback'),\n  pubcomp: genHeader('pubcomp'),\n  pubrel: genHeader('pubrel'),\n  pubrec: genHeader('pubrec')\n}\n\nprotocol.SUBACK_HEADER = Buffer.from([protocol.codes['suback'] << protocol.CMD_SHIFT])\n\n/* Protocol versions */\nprotocol.VERSION3 = Buffer.from([3])\nprotocol.VERSION4 = Buffer.from([4])\n\n/* QoS */\nprotocol.QOS = [0, 1, 2].map(function (qos) {\n  return Buffer.from([qos])\n})\n\n/* Empty packets */\nprotocol.EMPTY = {\n  pingreq: Buffer.from([protocol.codes['pingreq'] << 4, 0]),\n  pingresp: Buffer.from([protocol.codes['pingresp'] << 4, 0]),\n  disconnect: Buffer.from([protocol.codes['disconnect'] << 4, 0])\n}\n"},"lineCount":113}},"error":null,"hash":"82306fa98d052c4c9aebfa5127b4c672","cacheData":{"env":{}}}