{"id":"node_modules/jayson/lib/client/browser.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\package.json","includedInParent":true,"mtime":1558854523711},{"name":"lodash/extend","loc":{"line":3,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\extend.js"},{"name":"lodash/isArray","loc":{"line":4,"column":22},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isArray.js"},{"name":"lodash/isFunction","loc":{"line":5,"column":25},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isFunction.js"},{"name":"lodash/isObject","loc":{"line":6,"column":23},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isObject.js"},{"name":"lodash/isUndefined","loc":{"line":7,"column":26},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\isUndefined.js"},{"name":"lodash/negate","loc":{"line":8,"column":21},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\lodash\\negate.js"},{"name":"uuid/v4","loc":{"line":9,"column":19},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\uuid\\v4.js"},{"name":"../generateRequest","loc":{"line":10,"column":30},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\client\\browser.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\generateRequest.js"}],"generated":{"js":"'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jayson/lib/client/browser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}}],"sources":{"node_modules/jayson/lib/client/browser.js":"'use strict';\n\nvar extend = require('lodash/extend');\nvar isArray = require('lodash/isArray');\nvar isFunction = require('lodash/isFunction');\nvar isObject = require('lodash/isObject');\nvar isUndefined = require('lodash/isUndefined');\nvar negate = require('lodash/negate');\nvar uuid = require('uuid/v4');\nvar generateRequest = require('../generateRequest');\n\n/**\n *  Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n *  @class ClientBrowser\n *  @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n *  @param {Object} [options]\n *  @param {Function} [options.reviver] Reviver function for JSON\n *  @param {Function} [options.replacer] Replacer function for JSON\n *  @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n *  @param {Function} [options.generator] Function to use for generating request IDs\n *  @return {ClientBrowser}\n */\nvar ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  var defaults = {\n    reviver: null,\n    replacer: null,\n    generator: function() { return uuid(); },\n    version: 2\n  };\n\n  this.options = extend(defaults, options || {});\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  var self = this;\n  var request = null;\n\n  // is this a batch request?\n  var isBatch = isArray(method) && isFunction(params);\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  var isRaw = !isBatch && method && isObject(method) && isFunction(params);\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(isFunction(id)) {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    var hasCallback = isFunction(callback);\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  var message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  var response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      var isError = function(res) { return !isUndefined(res.error); };\n\n      return callback(null, response.filter(isError), response.filter(negate(isError)));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n"},"lineCount":158}},"error":null,"hash":"8c6b6a86ee51238e88bd1cdd75bfd798","cacheData":{"env":{}}}