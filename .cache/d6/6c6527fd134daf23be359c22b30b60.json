{"id":"node_modules/jayson/lib/server/tcp.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\package.json","includedInParent":true,"mtime":1558854523711},{"name":"net","loc":{"line":1,"column":18},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\tcp.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"../utils","loc":{"line":2,"column":20},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\tcp.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\utils.js"},{"name":"util","loc":{"line":21,"column":8},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\tcp.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\util\\util.js"},{"name":"../server","loc":{"line":59,"column":27},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\tcp.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\jayson\\lib\\server\\index.js"}],"generated":{"js":"var net = require('net');\nvar utils = require('../utils');\n\n/**\n *  Constructor for a Jayson TCP server\n *  @class ServerTcp\n *  @extends require('net').Server\n *  @param {Server} server Server instance\n *  @param {Object} [options] Options for this instance\n *  @return {ServerTcp}\n */\nvar TcpServer = function(server, options) {\n  if(!(this instanceof TcpServer)) {\n    return new TcpServer(server, options);\n  }\n\n  this.options = utils.merge(server.options, options || {});\n\n  net.Server.call(this, getTcpListener(this, server));\n};\nrequire('util').inherits(TcpServer, net.Server);\n\nmodule.exports = TcpServer;\n\n/**\n *  Returns a TCP connection listener bound to the server in the argument.\n *  @param {Server} server Instance of JaysonServer\n *  @param {net.Server} self Instance of net.Server\n *  @return {Function}\n *  @private\n *  @ignore\n */\nfunction getTcpListener(self, server) {\n  return function(conn) {\n    var options = self.options || {};\n\n    utils.parseStream(conn, options, function(err, request) {\n      if(err) {\n        return respondError(err);\n      }\n\n      server.call(request, function(error, success) {\n        var response = error || success;\n        if(response) {\n          utils.JSON.stringify(response, options, function(err, body) {\n            if(err) {\n              return respondError(err);\n            }\n            conn.write(body);\n          });\n        } else {\n          // no response received at all, must be a notification\n        }\n      });\n    });\n\n    // ends the request with an error code\n    function respondError(err) {\n      var Server = require('../server');\n      var error = server.error(Server.errors.PARSE_ERROR, null, String(err));\n      var response = utils.response(error, undefined, undefined, self.options.version);\n      utils.JSON.stringify(response, options, function(err, body) {\n        if(err) {\n          body = ''; // we tried our best.\n        }\n        conn.end(body);\n      });\n    }\n\n  };\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jayson/lib/server/tcp.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"node_modules/jayson/lib/server/tcp.js":"var net = require('net');\nvar utils = require('../utils');\n\n/**\n *  Constructor for a Jayson TCP server\n *  @class ServerTcp\n *  @extends require('net').Server\n *  @param {Server} server Server instance\n *  @param {Object} [options] Options for this instance\n *  @return {ServerTcp}\n */\nvar TcpServer = function(server, options) {\n  if(!(this instanceof TcpServer)) {\n    return new TcpServer(server, options);\n  }\n\n  this.options = utils.merge(server.options, options || {});\n\n  net.Server.call(this, getTcpListener(this, server));\n};\nrequire('util').inherits(TcpServer, net.Server);\n\nmodule.exports = TcpServer;\n\n/**\n *  Returns a TCP connection listener bound to the server in the argument.\n *  @param {Server} server Instance of JaysonServer\n *  @param {net.Server} self Instance of net.Server\n *  @return {Function}\n *  @private\n *  @ignore\n */\nfunction getTcpListener(self, server) {\n  return function(conn) {\n    var options = self.options || {};\n\n    utils.parseStream(conn, options, function(err, request) {\n      if(err) {\n        return respondError(err);\n      }\n\n      server.call(request, function(error, success) {\n        var response = error || success;\n        if(response) {\n          utils.JSON.stringify(response, options, function(err, body) {\n            if(err) {\n              return respondError(err);\n            }\n            conn.write(body);\n          });\n        } else {\n          // no response received at all, must be a notification\n        }\n      });\n    });\n\n    // ends the request with an error code\n    function respondError(err) {\n      var Server = require('../server');\n      var error = server.error(Server.errors.PARSE_ERROR, null, String(err));\n      var response = utils.response(error, undefined, undefined, self.options.version);\n      utils.JSON.stringify(response, options, function(err, body) {\n        if(err) {\n          body = ''; // we tried our best.\n        }\n        conn.end(body);\n      });\n    }\n\n  };\n}\n"},"lineCount":72}},"error":null,"hash":"c391a62cc91b717a509133749f41fc42","cacheData":{"env":{}}}