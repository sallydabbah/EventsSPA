{"id":"node_modules/msgpack5/lib/decoder.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\msgpack5\\package.json","includedInParent":true,"mtime":1558854523702},{"name":"bl","loc":{"line":3,"column":17},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\msgpack5\\lib\\decoder.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\msgpack5\\node_modules\\bl\\bl.js"},{"name":"util","loc":{"line":4,"column":19},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\msgpack5\\lib\\decoder.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\util\\util.js"}],"generated":{"js":"'use strict'\n\nvar bl = require('bl')\nvar util = require('util')\n\nfunction IncompleteBufferError (message) {\n  Error.call(this) // super constructor\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor) // super helper method to include stack trace in error object\n  }\n  this.name = this.constructor.name\n  this.message = message || 'unable to decode'\n}\n\nutil.inherits(IncompleteBufferError, Error)\n\nmodule.exports = function buildDecode (decodingTypes) {\n  return decode\n\n  function getSize (first) {\n    switch (first) {\n      case 0xc4:\n        return 2\n      case 0xc5:\n        return 3\n      case 0xc6:\n        return 5\n      case 0xc7:\n        return 3\n      case 0xc8:\n        return 4\n      case 0xc9:\n        return 6\n      case 0xca:\n        return 5\n      case 0xcb:\n        return 9\n      case 0xcc:\n        return 2\n      case 0xcd:\n        return 3\n      case 0xce:\n        return 5\n      case 0xcf:\n        return 9\n      case 0xd0:\n        return 2\n      case 0xd1:\n        return 3\n      case 0xd2:\n        return 5\n      case 0xd3:\n        return 9\n      case 0xd4:\n        return 3\n      case 0xd5:\n        return 4\n      case 0xd6:\n        return 6\n      case 0xd7:\n        return 10\n      case 0xd8:\n        return 18\n      case 0xd9:\n        return 2\n      case 0xda:\n        return 3\n      case 0xdb:\n        return 5\n      case 0xde:\n        return 3\n      default:\n        return -1\n    }\n  }\n\n  function hasMinBufferSize (first, length) {\n    var size = getSize(first)\n\n    if (size !== -1 && length < size) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function isValidDataSize (dataLength, bufLength, headerLength) {\n    return bufLength >= headerLength + dataLength\n  }\n\n  function buildDecodeResult (value, bytesConsumed) {\n    return {\n      value: value,\n      bytesConsumed: bytesConsumed\n    }\n  }\n\n  function decode (buf) {\n    if (!(buf instanceof bl)) {\n      buf = bl().append(buf)\n    }\n\n    var result = tryDecode(buf)\n    if (result) {\n      buf.consume(result.bytesConsumed)\n      return result.value\n    } else {\n      throw new IncompleteBufferError()\n    }\n  }\n\n  function tryDecode (buf, offset) {\n    offset = offset === undefined ? 0 : offset\n    var bufLength = buf.length - offset\n    if (bufLength <= 0) {\n      return null\n    }\n\n    var first = buf.readUInt8(offset)\n    var length\n    var result = 0\n    var type\n    var bytePos\n\n    if (!hasMinBufferSize(first, bufLength)) {\n      return null\n    }\n\n    switch (first) {\n      case 0xc0:\n        return buildDecodeResult(null, 1)\n      case 0xc2:\n        return buildDecodeResult(false, 1)\n      case 0xc3:\n        return buildDecodeResult(true, 1)\n      case 0xcc:\n        // 1-byte unsigned int\n        result = buf.readUInt8(offset + 1)\n        return buildDecodeResult(result, 2)\n      case 0xcd:\n        // 2-bytes BE unsigned int\n        result = buf.readUInt16BE(offset + 1)\n        return buildDecodeResult(result, 3)\n      case 0xce:\n        // 4-bytes BE unsigned int\n        result = buf.readUInt32BE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xcf:\n        // 8-bytes BE unsigned int\n        // Read long byte by byte, big-endian\n        for (bytePos = 7; bytePos >= 0; bytePos--) {\n          result += (buf.readUInt8(offset + bytePos + 1) * Math.pow(2, (8 * (7 - bytePos))))\n        }\n        return buildDecodeResult(result, 9)\n      case 0xd0:\n        // 1-byte signed int\n        result = buf.readInt8(offset + 1)\n        return buildDecodeResult(result, 2)\n      case 0xd1:\n        // 2-bytes signed int\n        result = buf.readInt16BE(offset + 1)\n        return buildDecodeResult(result, 3)\n      case 0xd2:\n        // 4-bytes signed int\n        result = buf.readInt32BE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xd3:\n        result = readInt64BE(buf.slice(offset + 1, offset + 9), 0)\n        return buildDecodeResult(result, 9)\n      case 0xca:\n        // 4-bytes float\n        result = buf.readFloatBE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xcb:\n        // 8-bytes double\n        result = buf.readDoubleBE(offset + 1)\n        return buildDecodeResult(result, 9)\n      case 0xd9:\n        // strings up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        if (!isValidDataSize(length, bufLength, 2)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 2, offset + 2 + length)\n        return buildDecodeResult(result, 2 + length)\n      case 0xda:\n        // strings up to 2^16 - 2 bytes\n        length = buf.readUInt16BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 3, offset + 3 + length)\n        return buildDecodeResult(result, 3 + length)\n      case 0xdb:\n        // strings up to 2^32 - 4 bytes\n        length = buf.readUInt32BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 5)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 5, offset + 5 + length)\n        return buildDecodeResult(result, 5 + length)\n      case 0xc4:\n        // buffers up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        if (!isValidDataSize(length, bufLength, 2)) {\n          return null\n        }\n        result = buf.slice(offset + 2, offset + 2 + length)\n        return buildDecodeResult(result, 2 + length)\n      case 0xc5:\n        // buffers up to 2^16 - 1 bytes\n        length = buf.readUInt16BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        result = buf.slice(offset + 3, offset + 3 + length)\n        return buildDecodeResult(result, 3 + length)\n      case 0xc6:\n        // buffers up to 2^32 - 1 bytes\n        length = buf.readUInt32BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 5)) {\n          return null\n        }\n        result = buf.slice(offset + 5, offset + 5 + length)\n        return buildDecodeResult(result, 5 + length)\n      case 0xdc:\n        // array up to 2^16 elements - 2 bytes\n        if (bufLength < 3) {\n          return null\n        }\n\n        length = buf.readUInt16BE(offset + 1)\n        return decodeArray(buf, offset, length, 3)\n      case 0xdd:\n        // array up to 2^32 elements - 4 bytes\n        if (bufLength < 5) {\n          return null\n        }\n\n        length = buf.readUInt32BE(offset + 1)\n        return decodeArray(buf, offset, length, 5)\n      case 0xde:\n        // maps up to 2^16 elements - 2 bytes\n        length = buf.readUInt16BE(offset + 1)\n        return decodeMap(buf, offset, length, 3)\n      case 0xdf:\n        length = buf.readUInt32BE(offset + 1)\n        return decodeMap(buf, offset, length, 5)\n      case 0xd4:\n        return decodeFixExt(buf, offset, 1)\n      case 0xd5:\n        return decodeFixExt(buf, offset, 2)\n      case 0xd6:\n        return decodeFixExt(buf, offset, 4)\n      case 0xd7:\n        return decodeFixExt(buf, offset, 8)\n      case 0xd8:\n        return decodeFixExt(buf, offset, 16)\n      case 0xc7:\n        // ext up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        type = buf.readUInt8(offset + 2)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 3)\n      case 0xc8:\n        // ext up to 2^16 - 1 bytes\n        length = buf.readUInt16BE(offset + 1)\n        type = buf.readUInt8(offset + 3)\n        if (!isValidDataSize(length, bufLength, 4)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 4)\n      case 0xc9:\n        // ext up to 2^32 - 1 bytes\n        length = buf.readUInt32BE(offset + 1)\n        type = buf.readUInt8(offset + 5)\n        if (!isValidDataSize(length, bufLength, 6)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 6)\n    }\n\n    if ((first & 0xf0) === 0x90) {\n      // we have an array with less than 15 elements\n      length = first & 0x0f\n      return decodeArray(buf, offset, length, 1)\n    } else if ((first & 0xf0) === 0x80) {\n      // we have a map with less than 15 elements\n      length = first & 0x0f\n      return decodeMap(buf, offset, length, 1)\n    } else if ((first & 0xe0) === 0xa0) {\n      // fixstr up to 31 bytes\n      length = first & 0x1f\n      if (isValidDataSize(length, bufLength, 1)) {\n        result = buf.toString('utf8', offset + 1, offset + length + 1)\n        return buildDecodeResult(result, length + 1)\n      } else {\n        return null\n      }\n    } else if (first >= 0xe0) {\n      // 5 bits negative ints\n      result = first - 0x100\n      return buildDecodeResult(result, 1)\n    } else if (first < 0x80) {\n      // 7-bits positive ints\n      return buildDecodeResult(first, 1)\n    } else {\n      throw new Error('not implemented yet')\n    }\n  }\n\n  function readInt64BE (buf, offset) {\n    var negate = (buf[offset] & 0x80) == 0x80 // eslint-disable-line\n\n    if (negate) {\n      var carry = 1\n      for (var i = offset + 7; i >= offset; i--) {\n        var v = (buf[i] ^ 0xff) + carry\n        buf[i] = v & 0xff\n        carry = v >> 8\n      }\n    }\n\n    var hi = buf.readUInt32BE(offset + 0)\n    var lo = buf.readUInt32BE(offset + 4)\n    return (hi * 4294967296 + lo) * (negate ? -1 : +1)\n  }\n\n  function decodeArray (buf, offset, length, headerLength) {\n    var result = []\n    var i\n    var totalBytesConsumed = 0\n\n    offset += headerLength\n    for (i = 0; i < length; i++) {\n      var decodeResult = tryDecode(buf, offset)\n      if (decodeResult) {\n        result.push(decodeResult.value)\n        offset += decodeResult.bytesConsumed\n        totalBytesConsumed += decodeResult.bytesConsumed\n      } else {\n        return null\n      }\n    }\n    return buildDecodeResult(result, headerLength + totalBytesConsumed)\n  }\n\n  function decodeMap (buf, offset, length, headerLength) {\n    var result = {}\n    var key\n    var i\n    var totalBytesConsumed = 0\n\n    offset += headerLength\n    for (i = 0; i < length; i++) {\n      var keyResult = tryDecode(buf, offset)\n      if (keyResult) {\n        offset += keyResult.bytesConsumed\n        var valueResult = tryDecode(buf, offset)\n        if (valueResult) {\n          key = keyResult.value\n          result[key] = valueResult.value\n          offset += valueResult.bytesConsumed\n          totalBytesConsumed += (keyResult.bytesConsumed + valueResult.bytesConsumed)\n        } else {\n          return null\n        }\n      } else {\n        return null\n      }\n    }\n    return buildDecodeResult(result, headerLength + totalBytesConsumed)\n  }\n\n  function decodeFixExt (buf, offset, size) {\n    var type = buf.readInt8(offset + 1) // Signed\n    return decodeExt(buf, offset, type, size, 2)\n  }\n\n  function decodeTimestamp (buf, size, headerSize) {\n    var seconds\n    var nanoseconds = 0\n\n    switch (size) {\n      case 4:\n        // timestamp 32 stores the number of seconds that have elapsed since 1970-01-01 00:00:00 UTC in an 32-bit unsigned integer\n        seconds = buf.readUInt32BE(0)\n        break\n\n      case 8:\n        // Timestamp 64 stores the number of seconds and nanoseconds that have elapsed\n        // since 1970-01-01 00:00:00 UTC in 32-bit unsigned integers, split 30/34 bits\n        var upper = buf.readUInt32BE(0)\n        var lower = buf.readUInt32BE(4)\n        nanoseconds = upper / 4\n        seconds = ((upper & 0x03) * Math.pow(2, 32)) + lower // If we use bitwise operators, we get truncated to 32bits\n        break\n\n      case 12:\n        throw new Error('timestamp 96 is not yet implemented')\n    }\n\n    var millis = (seconds * 1000) + Math.round(nanoseconds / 1E6)\n    return buildDecodeResult(new Date(millis), size + headerSize)\n  }\n\n  function decodeExt (buf, offset, type, size, headerSize) {\n    var i,\n      toDecode\n\n    offset += headerSize\n\n    // Pre-defined\n    if (type < 0) { // Reserved for future extensions\n      switch (type) {\n        case -1: // Tiemstamp https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\n          toDecode = buf.slice(offset, offset + size)\n          return decodeTimestamp(toDecode, size, headerSize)\n      }\n    }\n\n    for (i = 0; i < decodingTypes.length; i++) {\n      if (type === decodingTypes[i].type) {\n        toDecode = buf.slice(offset, offset + size)\n        var value = decodingTypes[i].decode(toDecode)\n        return buildDecodeResult(value, headerSize + size)\n      }\n    }\n\n    throw new Error('unable to find ext type ' + type)\n  }\n}\n\nmodule.exports.IncompleteBufferError = IncompleteBufferError\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/msgpack5/lib/decoder.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}}],"sources":{"node_modules/msgpack5/lib/decoder.js":"'use strict'\n\nvar bl = require('bl')\nvar util = require('util')\n\nfunction IncompleteBufferError (message) {\n  Error.call(this) // super constructor\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor) // super helper method to include stack trace in error object\n  }\n  this.name = this.constructor.name\n  this.message = message || 'unable to decode'\n}\n\nutil.inherits(IncompleteBufferError, Error)\n\nmodule.exports = function buildDecode (decodingTypes) {\n  return decode\n\n  function getSize (first) {\n    switch (first) {\n      case 0xc4:\n        return 2\n      case 0xc5:\n        return 3\n      case 0xc6:\n        return 5\n      case 0xc7:\n        return 3\n      case 0xc8:\n        return 4\n      case 0xc9:\n        return 6\n      case 0xca:\n        return 5\n      case 0xcb:\n        return 9\n      case 0xcc:\n        return 2\n      case 0xcd:\n        return 3\n      case 0xce:\n        return 5\n      case 0xcf:\n        return 9\n      case 0xd0:\n        return 2\n      case 0xd1:\n        return 3\n      case 0xd2:\n        return 5\n      case 0xd3:\n        return 9\n      case 0xd4:\n        return 3\n      case 0xd5:\n        return 4\n      case 0xd6:\n        return 6\n      case 0xd7:\n        return 10\n      case 0xd8:\n        return 18\n      case 0xd9:\n        return 2\n      case 0xda:\n        return 3\n      case 0xdb:\n        return 5\n      case 0xde:\n        return 3\n      default:\n        return -1\n    }\n  }\n\n  function hasMinBufferSize (first, length) {\n    var size = getSize(first)\n\n    if (size !== -1 && length < size) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function isValidDataSize (dataLength, bufLength, headerLength) {\n    return bufLength >= headerLength + dataLength\n  }\n\n  function buildDecodeResult (value, bytesConsumed) {\n    return {\n      value: value,\n      bytesConsumed: bytesConsumed\n    }\n  }\n\n  function decode (buf) {\n    if (!(buf instanceof bl)) {\n      buf = bl().append(buf)\n    }\n\n    var result = tryDecode(buf)\n    if (result) {\n      buf.consume(result.bytesConsumed)\n      return result.value\n    } else {\n      throw new IncompleteBufferError()\n    }\n  }\n\n  function tryDecode (buf, offset) {\n    offset = offset === undefined ? 0 : offset\n    var bufLength = buf.length - offset\n    if (bufLength <= 0) {\n      return null\n    }\n\n    var first = buf.readUInt8(offset)\n    var length\n    var result = 0\n    var type\n    var bytePos\n\n    if (!hasMinBufferSize(first, bufLength)) {\n      return null\n    }\n\n    switch (first) {\n      case 0xc0:\n        return buildDecodeResult(null, 1)\n      case 0xc2:\n        return buildDecodeResult(false, 1)\n      case 0xc3:\n        return buildDecodeResult(true, 1)\n      case 0xcc:\n        // 1-byte unsigned int\n        result = buf.readUInt8(offset + 1)\n        return buildDecodeResult(result, 2)\n      case 0xcd:\n        // 2-bytes BE unsigned int\n        result = buf.readUInt16BE(offset + 1)\n        return buildDecodeResult(result, 3)\n      case 0xce:\n        // 4-bytes BE unsigned int\n        result = buf.readUInt32BE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xcf:\n        // 8-bytes BE unsigned int\n        // Read long byte by byte, big-endian\n        for (bytePos = 7; bytePos >= 0; bytePos--) {\n          result += (buf.readUInt8(offset + bytePos + 1) * Math.pow(2, (8 * (7 - bytePos))))\n        }\n        return buildDecodeResult(result, 9)\n      case 0xd0:\n        // 1-byte signed int\n        result = buf.readInt8(offset + 1)\n        return buildDecodeResult(result, 2)\n      case 0xd1:\n        // 2-bytes signed int\n        result = buf.readInt16BE(offset + 1)\n        return buildDecodeResult(result, 3)\n      case 0xd2:\n        // 4-bytes signed int\n        result = buf.readInt32BE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xd3:\n        result = readInt64BE(buf.slice(offset + 1, offset + 9), 0)\n        return buildDecodeResult(result, 9)\n      case 0xca:\n        // 4-bytes float\n        result = buf.readFloatBE(offset + 1)\n        return buildDecodeResult(result, 5)\n      case 0xcb:\n        // 8-bytes double\n        result = buf.readDoubleBE(offset + 1)\n        return buildDecodeResult(result, 9)\n      case 0xd9:\n        // strings up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        if (!isValidDataSize(length, bufLength, 2)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 2, offset + 2 + length)\n        return buildDecodeResult(result, 2 + length)\n      case 0xda:\n        // strings up to 2^16 - 2 bytes\n        length = buf.readUInt16BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 3, offset + 3 + length)\n        return buildDecodeResult(result, 3 + length)\n      case 0xdb:\n        // strings up to 2^32 - 4 bytes\n        length = buf.readUInt32BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 5)) {\n          return null\n        }\n        result = buf.toString('utf8', offset + 5, offset + 5 + length)\n        return buildDecodeResult(result, 5 + length)\n      case 0xc4:\n        // buffers up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        if (!isValidDataSize(length, bufLength, 2)) {\n          return null\n        }\n        result = buf.slice(offset + 2, offset + 2 + length)\n        return buildDecodeResult(result, 2 + length)\n      case 0xc5:\n        // buffers up to 2^16 - 1 bytes\n        length = buf.readUInt16BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        result = buf.slice(offset + 3, offset + 3 + length)\n        return buildDecodeResult(result, 3 + length)\n      case 0xc6:\n        // buffers up to 2^32 - 1 bytes\n        length = buf.readUInt32BE(offset + 1)\n        if (!isValidDataSize(length, bufLength, 5)) {\n          return null\n        }\n        result = buf.slice(offset + 5, offset + 5 + length)\n        return buildDecodeResult(result, 5 + length)\n      case 0xdc:\n        // array up to 2^16 elements - 2 bytes\n        if (bufLength < 3) {\n          return null\n        }\n\n        length = buf.readUInt16BE(offset + 1)\n        return decodeArray(buf, offset, length, 3)\n      case 0xdd:\n        // array up to 2^32 elements - 4 bytes\n        if (bufLength < 5) {\n          return null\n        }\n\n        length = buf.readUInt32BE(offset + 1)\n        return decodeArray(buf, offset, length, 5)\n      case 0xde:\n        // maps up to 2^16 elements - 2 bytes\n        length = buf.readUInt16BE(offset + 1)\n        return decodeMap(buf, offset, length, 3)\n      case 0xdf:\n        length = buf.readUInt32BE(offset + 1)\n        return decodeMap(buf, offset, length, 5)\n      case 0xd4:\n        return decodeFixExt(buf, offset, 1)\n      case 0xd5:\n        return decodeFixExt(buf, offset, 2)\n      case 0xd6:\n        return decodeFixExt(buf, offset, 4)\n      case 0xd7:\n        return decodeFixExt(buf, offset, 8)\n      case 0xd8:\n        return decodeFixExt(buf, offset, 16)\n      case 0xc7:\n        // ext up to 2^8 - 1 bytes\n        length = buf.readUInt8(offset + 1)\n        type = buf.readUInt8(offset + 2)\n        if (!isValidDataSize(length, bufLength, 3)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 3)\n      case 0xc8:\n        // ext up to 2^16 - 1 bytes\n        length = buf.readUInt16BE(offset + 1)\n        type = buf.readUInt8(offset + 3)\n        if (!isValidDataSize(length, bufLength, 4)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 4)\n      case 0xc9:\n        // ext up to 2^32 - 1 bytes\n        length = buf.readUInt32BE(offset + 1)\n        type = buf.readUInt8(offset + 5)\n        if (!isValidDataSize(length, bufLength, 6)) {\n          return null\n        }\n        return decodeExt(buf, offset, type, length, 6)\n    }\n\n    if ((first & 0xf0) === 0x90) {\n      // we have an array with less than 15 elements\n      length = first & 0x0f\n      return decodeArray(buf, offset, length, 1)\n    } else if ((first & 0xf0) === 0x80) {\n      // we have a map with less than 15 elements\n      length = first & 0x0f\n      return decodeMap(buf, offset, length, 1)\n    } else if ((first & 0xe0) === 0xa0) {\n      // fixstr up to 31 bytes\n      length = first & 0x1f\n      if (isValidDataSize(length, bufLength, 1)) {\n        result = buf.toString('utf8', offset + 1, offset + length + 1)\n        return buildDecodeResult(result, length + 1)\n      } else {\n        return null\n      }\n    } else if (first >= 0xe0) {\n      // 5 bits negative ints\n      result = first - 0x100\n      return buildDecodeResult(result, 1)\n    } else if (first < 0x80) {\n      // 7-bits positive ints\n      return buildDecodeResult(first, 1)\n    } else {\n      throw new Error('not implemented yet')\n    }\n  }\n\n  function readInt64BE (buf, offset) {\n    var negate = (buf[offset] & 0x80) == 0x80 // eslint-disable-line\n\n    if (negate) {\n      var carry = 1\n      for (var i = offset + 7; i >= offset; i--) {\n        var v = (buf[i] ^ 0xff) + carry\n        buf[i] = v & 0xff\n        carry = v >> 8\n      }\n    }\n\n    var hi = buf.readUInt32BE(offset + 0)\n    var lo = buf.readUInt32BE(offset + 4)\n    return (hi * 4294967296 + lo) * (negate ? -1 : +1)\n  }\n\n  function decodeArray (buf, offset, length, headerLength) {\n    var result = []\n    var i\n    var totalBytesConsumed = 0\n\n    offset += headerLength\n    for (i = 0; i < length; i++) {\n      var decodeResult = tryDecode(buf, offset)\n      if (decodeResult) {\n        result.push(decodeResult.value)\n        offset += decodeResult.bytesConsumed\n        totalBytesConsumed += decodeResult.bytesConsumed\n      } else {\n        return null\n      }\n    }\n    return buildDecodeResult(result, headerLength + totalBytesConsumed)\n  }\n\n  function decodeMap (buf, offset, length, headerLength) {\n    var result = {}\n    var key\n    var i\n    var totalBytesConsumed = 0\n\n    offset += headerLength\n    for (i = 0; i < length; i++) {\n      var keyResult = tryDecode(buf, offset)\n      if (keyResult) {\n        offset += keyResult.bytesConsumed\n        var valueResult = tryDecode(buf, offset)\n        if (valueResult) {\n          key = keyResult.value\n          result[key] = valueResult.value\n          offset += valueResult.bytesConsumed\n          totalBytesConsumed += (keyResult.bytesConsumed + valueResult.bytesConsumed)\n        } else {\n          return null\n        }\n      } else {\n        return null\n      }\n    }\n    return buildDecodeResult(result, headerLength + totalBytesConsumed)\n  }\n\n  function decodeFixExt (buf, offset, size) {\n    var type = buf.readInt8(offset + 1) // Signed\n    return decodeExt(buf, offset, type, size, 2)\n  }\n\n  function decodeTimestamp (buf, size, headerSize) {\n    var seconds\n    var nanoseconds = 0\n\n    switch (size) {\n      case 4:\n        // timestamp 32 stores the number of seconds that have elapsed since 1970-01-01 00:00:00 UTC in an 32-bit unsigned integer\n        seconds = buf.readUInt32BE(0)\n        break\n\n      case 8:\n        // Timestamp 64 stores the number of seconds and nanoseconds that have elapsed\n        // since 1970-01-01 00:00:00 UTC in 32-bit unsigned integers, split 30/34 bits\n        var upper = buf.readUInt32BE(0)\n        var lower = buf.readUInt32BE(4)\n        nanoseconds = upper / 4\n        seconds = ((upper & 0x03) * Math.pow(2, 32)) + lower // If we use bitwise operators, we get truncated to 32bits\n        break\n\n      case 12:\n        throw new Error('timestamp 96 is not yet implemented')\n    }\n\n    var millis = (seconds * 1000) + Math.round(nanoseconds / 1E6)\n    return buildDecodeResult(new Date(millis), size + headerSize)\n  }\n\n  function decodeExt (buf, offset, type, size, headerSize) {\n    var i,\n      toDecode\n\n    offset += headerSize\n\n    // Pre-defined\n    if (type < 0) { // Reserved for future extensions\n      switch (type) {\n        case -1: // Tiemstamp https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\n          toDecode = buf.slice(offset, offset + size)\n          return decodeTimestamp(toDecode, size, headerSize)\n      }\n    }\n\n    for (i = 0; i < decodingTypes.length; i++) {\n      if (type === decodingTypes[i].type) {\n        toDecode = buf.slice(offset, offset + size)\n        var value = decodingTypes[i].decode(toDecode)\n        return buildDecodeResult(value, headerSize + size)\n      }\n    }\n\n    throw new Error('unable to find ext type ' + type)\n  }\n}\n\nmodule.exports.IncompleteBufferError = IncompleteBufferError\n"},"lineCount":437}},"error":null,"hash":"6f9dfb6834673edc49c44aed9ea186ed","cacheData":{"env":{}}}