{"id":"node_modules/es5-ext/array/#/e-index-of.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\package.json","includedInParent":true,"mtime":1558854523726},{"name":"../../number/is-nan","loc":{"line":3,"column":32},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\array\\#\\e-index-of.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\number\\is-nan\\index.js"},{"name":"../../number/to-pos-integer","loc":{"line":4,"column":32},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\array\\#\\e-index-of.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\number\\to-pos-integer.js"},{"name":"../../object/valid-value","loc":{"line":5,"column":32},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\array\\#\\e-index-of.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\es5-ext\\object\\valid-value.js"}],"generated":{"js":"\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/es5-ext/array/#/e-index-of.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/es5-ext/array/#/e-index-of.js":"\"use strict\";\n\nvar numberIsNaN       = require(\"../../number/is-nan\")\n  , toPosInt          = require(\"../../number/to-pos-integer\")\n  , value             = require(\"../../object/valid-value\")\n  , indexOf           = Array.prototype.indexOf\n  , objHasOwnProperty = Object.prototype.hasOwnProperty\n  , abs               = Math.abs\n  , floor             = Math.floor;\n\nmodule.exports = function (searchElement /*, fromIndex*/) {\n\tvar i, length, fromIndex, val;\n\tif (!numberIsNaN(searchElement)) return indexOf.apply(this, arguments);\n\n\tlength = toPosInt(value(this).length);\n\tfromIndex = arguments[1];\n\tif (isNaN(fromIndex)) fromIndex = 0;\n\telse if (fromIndex >= 0) fromIndex = floor(fromIndex);\n\telse fromIndex = toPosInt(this.length) - floor(abs(fromIndex));\n\n\tfor (i = fromIndex; i < length; ++i) {\n\t\tif (objHasOwnProperty.call(this, i)) {\n\t\t\tval = this[i];\n\t\t\tif (numberIsNaN(val)) return i; // Jslint: ignore\n\t\t}\n\t}\n\treturn -1;\n};\n"},"lineCount":29}},"error":null,"hash":"72285e595b554dc36c36b7d98932bf74","cacheData":{"env":{}}}