{"id":"node_modules/ro/lib/mqtt/server.js","dependencies":[{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\mqtt\\server.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\package.json","includedInParent":true,"mtime":1558854526224},{"name":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\package.json","includedInParent":true,"mtime":1558854523669},{"name":"events","loc":{"line":2,"column":25},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\mqtt\\server.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\events\\events.js"},{"name":"assert","loc":{"line":3,"column":23},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\mqtt\\server.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\assert\\assert.js"},{"name":"mqttr","loc":{"line":4,"column":22},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\mqtt\\server.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\mqttr\\lib\\index.js"},{"name":"../utils","loc":{"line":5,"column":24},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\mqtt\\server.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\utils.js"},{"name":"pino","loc":{"line":29,"column":49},"parent":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\ro\\lib\\mqtt\\server.js","resolved":"C:\\Users\\ameerzu\\Desktop\\BestWishesTsofen\\EventsSPA\\node_modules\\pino\\browser.js"}],"generated":{"js":"\"use strict\";\nconst events_1 = require(\"events\");\nconst assert = require(\"assert\");\nconst mqttr = require(\"mqttr\");\nconst utils_1 = require(\"../utils\");\nmodule.exports = class MQTTServer extends events_1.EventEmitter {\n    constructor(server, client, options, logger) {\n        super();\n        if (typeof options === 'string') {\n            options = { topic: options };\n        }\n        options = Object.assign({\n            qos: 1,\n            logger: {\n                level: 'warn',\n                prettyPrint: {\n                    forceColor: true\n                }\n            }\n        }, options);\n        assert(options.topic, '\"options.topic\" is required');\n        if (typeof client === 'string') {\n            this.client = mqttr.connect(client, options);\n            this._owns = true;\n        }\n        else {\n            this.client = client;\n        }\n        this.logger = logger = logger || require('pino')(options.logger);\n        this.topic = options.topic;\n        this.subscription = this.client.subscribe(options.topic, (topic, payload) => {\n            server.call(payload, (error, success) => {\n                const response = error || success;\n                if (!this.client.connected || this.client.disconnecting || !response) {\n                    logger.debug('The client is disconnected or disconnecting. Ignore response!');\n                    return;\n                }\n                const shouldReply = Array.isArray(response) ? response.find(item => !!item.id) : response.id;\n                if (shouldReply) {\n                    const replyTopic = topic + \"/reply\";\n                    logger.debug('< Outgoing to (\"%s\": %j)', replyTopic, response);\n                    this.client.publish(replyTopic, response, { qos: options.qos });\n                }\n            });\n        }, { qos: options.qos });\n    }\n    static create(server, client, options, logger) {\n        return new MQTTServer(server, client, options, logger);\n    }\n    ready(cb) {\n        cb = cb || utils_1.createPromiseCallback();\n        this.client.ready(cb);\n        return cb.promise;\n    }\n    ;\n    close(cb) {\n        cb = cb || utils_1.createPromiseCallback();\n        this.subscription.cancel();\n        if (this._owns) {\n            this.logger.debug('close mqtt connection');\n            this.client.end(cb);\n        }\n        else {\n            cb();\n        }\n        return cb.promise;\n    }\n    ;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"server.js","sourceRoot":"","sources":["../../src/mqtt/server.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"21b0b8931cc08ace8651708c4e9e8329","cacheData":{"env":{}}}